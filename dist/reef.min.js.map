{"version":3,"file":"reef.min.js","sources":["../src/components/utilities.js","../src/components/store.js","../src/components/setter.js","../src/components/render.js","../src/components/component.js","../src/components/listeners.js"],"sourcesContent":["/**\n * Emit a custom event\n * @param  {String} type   The event type\n * @param  {*}      detail Any details to pass along with the event\n * @param  {Node}   elem   The element to emit the event on\n */\nfunction emit (type, detail, elem = document) {\n\n\t// Create a new event\n\tlet event = new CustomEvent(`reef:${type}`, {\n\t\tbubbles: true,\n\t\tcancelable: true,\n\t\tdetail: detail\n\t});\n\n\t// Dispatch the event\n\treturn elem.dispatchEvent(event);\n\n}\n\n/**\n * Get the element from the UI\n * @param  {String|Node} elem The element or selector string\n * @return {Node}             The element\n */\nfunction getElem (elem) {\n\treturn typeof elem === 'string' ? document.querySelector(elem) : elem;\n}\n\n/**\n * Get an object's type\n * @param  {*}      obj The object\n * @return {String}     The type\n */\nfunction getType (obj) {\n\treturn Object.prototype.toString.call(obj).slice(8, -1).toLowerCase();\n}\n\n\nexport {emit, getElem, getType};","import {emit, getType} from './utilities.js';\n\n\n/**\n * Create a Proxy handler object\n * @param  {String} name The custom event namespace\n * @param  {Object} data The data object\n * @return {Object}      The handler object\n */\nfunction handler (name, data) {\n\tlet type = 'store' + (name ? `-${name}` : '');\n\treturn {\n\t\tget (obj, prop) {\n\t\t\tif (prop === '_isProxy') return true;\n\t\t\tif (['object', 'array'].includes(getType(obj[prop])) && !obj[prop]._isProxy) {\n\t\t\t\tobj[prop] = new Proxy(obj[prop], handler(name, data));\n\t\t\t}\n\t\t\treturn obj[prop];\n\t\t},\n\t\tset (obj, prop, value) {\n\t\t\tif (obj[prop] === value) return true;\n\t\t\tobj[prop] = value;\n\t\t\temit(type, data);\n\t\t\treturn true;\n\t\t},\n\t\tdeleteProperty (obj, prop) {\n\t\t\tdelete obj[prop];\n\t\t\temit(type, data);\n\t\t\treturn true;\n\t\t}\n\t};\n}\n\n/**\n * Create a new store\n * @param  {Object} data The data object\n * @param  {String} name The custom event namespace\n * @return {Proxy}       The reactive proxy\n */\nfunction store (data = {}, name = '') {\n\tdata = ['array', 'object'].includes(getType(data)) ? data : {value: data};\n\treturn new Proxy(data, handler(name, data));\n}\n\n\nexport default store;","import {emit} from './utilities.js';\n\n\n/**\n * Setter Class\n */\nclass Setter {\n\n\t/**\n\t * The constructor object\n\t * @param  {Node|String} elem     The element or selector to render the template into\n\t * @param  {Function}    template The template function to run when the data updates\n\t * @param  {Object}      options  Additional options\n\t */\n\tconstructor (data, setters, name = '') {\n\n\t\t// Get store type\n\t\tlet type = 'store' + (name ? `-${name}` : '');\n\n\t\t// Create data property setter/getter\n\t\tObject.defineProperties(this, {\n\t\t\tdata: {\n\t\t\t\tget () {\n\t\t\t\t\treturn structuredClone(data);\n\t\t\t\t},\n\t\t\t\tset () {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// Add setter functions\n\t\tfor (let fn in setters) {\n\t\t\tif (typeof setters[fn] !== 'function') continue;\n\t\t\tthis[fn] = function (...args) {\n\t\t\t\tsetters[fn](data, ...args);\n\t\t\t\temit(type, data);\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n\n/**\n * Create a new setter\n * @param  {Object} data    The data object\n * @param  {Object} setters The setter functions\n * @param  {String} name    The custom event namespace\n * @return {Proxy}          The reactive proxy\n */\nfunction setter (data = {}, setters = {}, name = '') {\n\treturn new Setter(data, setters, name);\n}\n\n\nexport default setter;","import {emit, getElem} from './utilities.js';\n\n\n// Form fields and attributes that can be modified by users\n// They also have implicit values that make it hard to know if they were changed by the user or developer\nlet formFields = ['input', 'option', 'textarea'];\nlet formAtts = ['value', 'checked', 'selected'];\nlet formAttsNoVal = ['checked', 'selected'];\n\n/**\n * Convert a template string into HTML DOM nodes\n * @param  {String} str The template string\n * @return {Node}       The template HTML\n */\nfunction stringToHTML (str) {\n\n    // Create document\n    let parser = new DOMParser();\n    let doc = parser.parseFromString(str, 'text/html');\n\n    // If there are items in the head, move them to the body\n    if (doc.head && doc.head.childNodes.length) {\n        Array.from(doc.head.childNodes).reverse().forEach(function (node) {\n            doc.body.insertBefore(node, doc.body.firstChild);\n        });\n    }\n\n    return doc.body || document.createElement('body');\n\n}\n\n/**\n * Check if an attribute string has a stringified falsy value\n * @param  {String}  str The string\n * @return {Boolean}     If true, value is falsy (yea, I know, that's a little confusing)\n */\nfunction isFalsy (str) {\n\treturn ['false', 'null', 'undefined', '0', '-0', 'NaN', '0n', '-0n'].includes(str);\n}\n\n/**\n * Check if attribute should be skipped (sanitize properties)\n * @param  {String}  name   The attribute name\n * @param  {String}  value  The attribute value\n * @param  {Boolean} events If true, inline events are allowed\n * @return {Boolean}        If true, skip the attribute\n */\nfunction skipAttribute (name, value, events) {\n\tlet val = value.replace(/\\s+/g, '').toLowerCase();\n\tif (['src', 'href', 'xlink:href'].includes(name)) {\n\t\tif (val.includes('javascript:') || val.includes('data:text/html')) return true;\n\t}\n\tif (name.startsWith('@on') || name.startsWith('#on')) return true;\n\tif (!events && name.startsWith('on')) return true;\n}\n\n/**\n * Add an attribute to an element\n * @param {Node}   elem The element\n * @param {String} att  The attribute\n * @param {String} val  The value\n * @param  {Boolean} events If true, inline events are allowed\n */\nfunction addAttribute (elem, att, val, events) {\n\n\t// Sanitize dangerous attributes\n\tif (skipAttribute(att, val, events)) return;\n\n\t// If there's a Listeners object, handle delegation\n\tif (events && events.delegate) {\n\t\tevents.delegate(elem, att, val);\n\t\treturn;\n\t}\n\n\t// If it's a form attribute, set the property directly\n\tif (formAtts.includes(att)) {\n\t\telem[att] = att === 'value' ? val : ' ';\n\t}\n\n\t// Update the attribute\n\telem.setAttribute(att, val);\n\n\n}\n\n/**\n * Remove an attribute from an element\n * @param {Node}   elem The element\n * @param {String} att  The attribute\n */\nfunction removeAttribute (elem, att) {\n\n\t// If it's a form attribute, remove the property directly\n\tif (formAtts.includes(att)) {\n\t\telem[att] = '';\n\t}\n\n\t// Remove the attribute\n\telem.removeAttribute(att);\n\n}\n\n/**\n * Compare the existing node attributes to the template node attributes and make updates\n * @param  {Node}    template The new template\n * @param  {Node}    existing The existing DOM node\n * @param  {Boolean} events   If true, inline events allowed\n */\nfunction diffAttributes (template, existing, events) {\n\n\t// If the node is not an element, bail\n\tif (template.nodeType !== 1) return;\n\n\t// Get attributes for the template and existing DOM\n\tlet templateAtts = template.attributes;\n\tlet existingAtts = existing.attributes;\n\n\t// Add and update attributes from the template into the DOM\n\tfor (let {name, value} of templateAtts) {\n\n\t\t// Skip [#*] attributes\n\t\tif (name.startsWith('#')) continue;\n\n\t\t// Skip user-editable form field attributes\n\t\tif (formAtts.includes(name) && formFields.includes(template.tagName.toLowerCase())) continue;\n\n\t\t// Convert [@*] names to their real attribute name\n\t\tlet attName = name.startsWith('@') ? name.slice(1) : name;\n\n\t\t// If its a no-value property and it's falsy remove it\n\t\tif (formAttsNoVal.includes(attName) && isFalsy(value)) {\n\t\t\tremoveAttribute(existing, attName);\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Otherwise, add the attribute\n\t\taddAttribute(existing, attName, value, events);\n\n\t}\n\n\t// Remove attributes from the DOM that shouldn't be there\n\tfor (let {name, value} of existingAtts) {\n\n\t\t// If the attribute exists in the template, skip it\n\t\tif (templateAtts[name]) continue;\n\n\t\t// Skip reef-on* attributes if there's a matching listener in the template\n\t\tif (name.startsWith('reef-on') && templateAtts[name.replace('reef-', '')]) continue;\n\n\t\t// Skip user-editable form field attributes\n\t\tif (formAtts.includes(name) && formFields.includes(existing.tagName.toLowerCase())) continue;\n\n\t\t// Otherwise, remove it\n\t\tremoveAttribute(existing, name);\n\n\t}\n\n}\n\n/**\n * Add default attributes to a newly created element\n * @param  {Node} elem The element\n */\nfunction addDefaultAtts (elem, events) {\n\n\t// Only run on elements\n\tif (elem.nodeType !== 1) return;\n\n\t// Remove [@*] and [#*] attributes and replace them with the plain attributes\n\t// Remove unsafe HTML attributes\n\tfor (let {name, value} of elem.attributes) {\n\n\t\t// If the attribute should be skipped, remove it\n\t\tif (skipAttribute(name, value, events)) {\n\t\t\tremoveAttribute(elem, name);\n\t\t\tcontinue;\n\t\t}\n\n\t\t// If there's a Listeners object, handle delegation\n\t\tif (name.startsWith('on') && events && events.delegate) {\n\t\t\tevents.delegate(elem, name, value);\n\t\t\tremoveAttribute(elem, name);\n\t\t\tcontinue;\n\t\t}\n\n\t\t// If the attribute isn't a [@*] or [#*], skip it\n\t\tif (!name.startsWith('@') && !name.startsWith('#')) continue;\n\n\t\t// Get the plain attribute name\n\t\tlet attName = name.slice(1);\n\n\t\t// Remove the [@*] or [#*] attribute\n\t\tremoveAttribute(elem, name);\n\n\t\t// If it's a no-value attribute and its falsy, skip it\n\t\tif (formAttsNoVal.includes(attName) && isFalsy(value)) continue;\n\n\t\t// Add the plain attribute\n\t\taddAttribute(elem, attName, value, events);\n\n\t}\n\n\t// If there are child elems, recursively add defaults to them\n\tif (elem.childNodes) {\n\t\tfor (let node of elem.childNodes) {\n\t\t\taddDefaultAtts(node, events);\n\t\t}\n\t}\n\n}\n\n/**\n * Get the content from a node\n * @param  {Node}   node The node\n * @return {String}      The content\n */\nfunction getNodeContent (node) {\n\treturn node.childNodes && node.childNodes.length ? null : node.textContent;\n}\n\n/**\n * Check if two nodes are different\n * @param  {Node}  node1 The first node\n * @param  {Node}  node2 The second node\n * @return {Boolean}     If true, they're not the same node\n */\nfunction isDifferentNode (node1, node2) {\n\treturn (\n\t\t(typeof node1.nodeType === 'number' && node1.nodeType !== node2.nodeType) ||\n\t\t(typeof node1.tagName === 'string' && node1.tagName !== node2.tagName) ||\n\t\t(typeof node1.id === 'string' && node1.id !== node2.id) ||\n\t\t(typeof node1.src === 'string' && node1.src !== node2.src)\n\t);\n}\n\n/**\n * Check if the desired node is further ahead in the DOM existingNodes\n * @param  {Node}     node           The node to look for\n * @param  {NodeList} existingNodes  The DOM existingNodes\n * @param  {Integer}  index          The indexing index\n * @return {Integer}                 How many nodes ahead the target node is\n */\nfunction aheadInTree (node, existingNodes, index) {\n\treturn Array.from(existingNodes).slice(index + 1).find(function (branch) {\n\t\treturn !isDifferentNode(node, branch);\n\t});\n}\n\n/**\n * If there are extra elements in DOM, remove them\n * @param  {Array} existingNodes      The existing DOM\n * @param  {Array} templateNodes The template\n */\nfunction trimExtraNodes (existingNodes, templateNodes) {\n\tlet extra = existingNodes.length - templateNodes.length;\n\tif (extra < 1)  return;\n\tfor (; extra > 0; extra--) {\n\t\texistingNodes[existingNodes.length - 1].remove();\n\t}\n}\n\n/**\n * Remove scripts from HTML\n * @param  {Node}    elem The element to remove scripts from\n */\nfunction removeScripts (elem) {\n\tlet scripts = elem.querySelectorAll('script');\n\tfor (let script of scripts) {\n\t\tscript.remove();\n\t}\n}\n\n/**\n * Diff the existing DOM node versus the template\n * @param  {Array}   template The template HTML\n * @param  {Node}    existing The current DOM HTML\n * @param  {Boolean} events   If true, inline events allowed\n */\nfunction diff (template, existing, events) {\n\n\t// Get the nodes in the template and existing UI\n\tlet templateNodes = template.childNodes;\n\tlet existingNodes = existing.childNodes;\n\n\t// Don't inject scripts\n\tif (removeScripts(template)) return;\n\n\t// Loop through each node in the template and compare it to the matching element in the UI\n\ttemplateNodes.forEach(function (node, index) {\n\n\t\t// If element doesn't exist, create it\n\t\tif (!existingNodes[index]) {\n\t\t\tlet clone = node.cloneNode(true);\n\t\t\taddDefaultAtts(clone, events);\n\t\t\texisting.append(clone);\n\t\t\treturn;\n\t\t}\n\n\t\t// If there is, but it's not the same node type, insert the new node before the existing one\n\t\tif (isDifferentNode(node, existingNodes[index])) {\n\n\t\t\t// Check if node exists further in the tree\n\t\t\tlet ahead = aheadInTree(node, existingNodes, index);\n\n\t\t\t// If not, insert the node before the current one\n\t\t\tif (!ahead) {\n\t\t\t\tlet clone = node.cloneNode(true);\n\t\t\t\taddDefaultAtts(clone, events);\n\t\t\t\texistingNodes[index].before(clone);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Otherwise, move it to the current spot\n\t\t\texistingNodes[index].before(ahead);\n\n\t\t}\n\n\t\t// If attributes are different, update them\n\t\tdiffAttributes(node, existingNodes[index], events);\n\n\t\t// Stop diffing if a native web component\n\t\tif (node.nodeName.includes('-')) return;\n\n\t\t// If content is different, update it\n\t\tlet templateContent = getNodeContent(node);\n\t\tif (templateContent && templateContent !== getNodeContent(existingNodes[index])) {\n\t\t\texistingNodes[index].textContent = templateContent;\n\t\t}\n\n\t\t// If there shouldn't be child nodes but there are, remove them\n\t\tif (!node.childNodes.length && existingNodes[index].childNodes.length) {\n\t\t\texistingNodes[index].innerHTML = '';\n\t\t\treturn;\n\t\t}\n\n\t\t// If DOM is empty and shouldn't be, build it up\n\t\t// This uses a document fragment to minimize reflows\n\t\tif (!existingNodes[index].childNodes.length && node.childNodes.length) {\n\t\t\tlet fragment = document.createDocumentFragment();\n\t\t\tdiff(node, fragment, events);\n\t\t\texistingNodes[index].appendChild(fragment);\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are nodes within it, recursively diff those\n\t\tif (node.childNodes.length) {\n\t\t\tdiff(node, existingNodes[index], events);\n\t\t}\n\n\t});\n\n\t// If extra elements in DOM, remove them\n\ttrimExtraNodes(existingNodes, templateNodes);\n\n}\n\n/**\n * Render a template into the UI\n * @param  {Node|String} elem     The element or selector to render the template into\n * @param  {String}      template The template to render\n * @param  {Boolean}     events   If true, inline events allowed\n */\nfunction render (elem, template, events) {\n\tlet node = getElem(elem);\n\tlet html = stringToHTML(template);\n\tif (!emit('before-render', null, node)) return;\n\tdiff(html, node, events);\n\temit('render', null, node);\n}\n\nexport default render;","import render from './render.js';\nimport {emit, getElem} from './utilities.js';\n\n\n/**\n * Create the event handler function\n * @param {Class} instance The instance\n */\nfunction createHandler (instance) {\n\treturn function handler (event) {\n\t\tinstance.render();\n\t};\n}\n\n/**\n * Component Class\n */\nclass Component {\n\n\t/**\n\t * The constructor object\n\t * @param  {Node|String} elem     The element or selector to render the template into\n\t * @param  {Function}    template The template function to run when the data updates\n\t * @param  {Object}      options  Additional options\n\t */\n\tconstructor (elem, template, options) {\n\n\t\t// Create instance properties\n\t\tthis.elem = elem;\n\t\tthis.template = template;\n\t\tthis.stores = options.stores ? options.stores.map((store) => `reef:store-${store}`) : ['reef:store'];\n\t\tthis.events = options.events;\n\t\tthis.handler = createHandler(this);\n\t\tthis.debounce = null;\n\n\t\t// Init\n\t\tthis.start();\n\n\t}\n\n\t/**\n\t * Start reactive data rendering\n\t */\n\tstart () {\n\t\tfor (let store of this.stores) {\n\t\t\tdocument.addEventListener(store, this.handler);\n\t\t}\n\t\tthis.render();\n\t\temit('start', null, getElem(this.elem));\n\t}\n\n\t/**\n\t * Stop reactive data rendering\n\t */\n\tstop () {\n\t\tfor (let store of this.stores) {\n\t\t\tdocument.removeEventListener(store, this.handler);\n\t\t}\n\t\temit('stop', null, getElem(this.elem));\n\t}\n\n\t/**\n\t * Render the UI\n\t */\n\trender () {\n\n\t\t// Cache instance\n\t\tlet self = this;\n\n\t\t// If there's a pending render, cancel it\n\t\tif (self.debounce) {\n\t\t\twindow.cancelAnimationFrame(self.debounce);\n\t\t}\n\n\t\t// Setup the new render to run at the next animation frame\n\t\tself.debounce = window.requestAnimationFrame(function () {\n\t\t\trender(self.elem, self.template(), self.events);\n\t\t});\n\n\t}\n\n}\n\n/**\n * Create a new listener\n * @param  {Node|String} elem     The element or selector to render the template into\n * @param  {Function}    template The template function to run when the data updates\n * @param  {Object}      options  Additional options\n */\nfunction component (elem, template, options = {}) {\n\treturn new Component(elem, template, options);\n}\n\n\nexport default component;","/**\n * Handlers Class\n */\nclass Listeners {\n\n\t#listeners;\n\t#ids;\n\t#events;\n\n\t/**\n\t * The constructor object\n\t * @param  {Object} listeners The event listeners to register\n\t */\n\tconstructor (listeners) {\n\n\t\t// Create instance properties\n\t\tthis.#listeners = {};\n\t\tthis.#ids = {};\n\t\tthis.#events = [];\n\n\t\t// Setup property values\n\t\tfor (let [key, fn] of Object.entries(listeners)) {\n\t\t\tlet id = crypto.randomUUID();\n\t\t\tthis.#listeners[key] = {fn, id};\n\t\t\tthis.#ids[id] = key;\n\t\t}\n\n\t}\n\n\t/**\n\t * Create an event listener handler method\n\t * @param  {Instance} instance The Listener class instance\n\t * @return {Function}          The event handler method\n\t */\n\tstatic getHandler (instance) {\n\t\treturn function (event) {\n\t\t\tlet target = event.target.closest(`[reef-on${event.type}]`);\n\t\t\tif (!target) return;\n\t\t\tlet id = instance.#ids[target.getAttribute(`reef-on${event.type}`)];\n\t\t\tif (!instance.#events.includes(event.type) || !instance.#listeners[id]) return;\n\t\t\tinstance.#listeners[id].fn(event);\n\t\t}\n\t}\n\n\t/**\n\t * Delegate the event on an element\n\t * @param  {Element} elem  The element to delegate events on\n\t * @param  {String}  event The event name\n\t * @param  {String}  val   The function to run for the event\n\t */\n\tdelegate (elem, event, val) {\n\n\t\t// Get the event listener ID\n\t\tlet fnName = val.split('(')[0];\n\t\tlet listener = this.#listeners[fnName];\n\t\tif (!listener) return;\n\n\t\t// Add the reef-on* attribute and remove the original\n\t\telem.setAttribute(`reef-${event}`, listener.id);\n\n\t\t// If there's not already a listener, start one\n\t\tlet type = event.replace('on', '');\n\t\tif (this.#events.includes(type)) return;\n\t\tdocument.addEventListener(type, Listeners.getHandler(this), true);\n\t\tthis.#events.push(type);\n\n\t}\n\n}\n\n/**\n * Create a new listeners instance\n * @param  {Object} listeners The event listeners to register\n */\nfunction listeners (listeners) {\n\treturn new Listeners(listeners);\n}\n\n\nexport default listeners;"],"names":["emit","type","detail","elem","document","event","CustomEvent","bubbles","cancelable","dispatchEvent","getElem","querySelector","getType","obj","Object","prototype","toString","call","slice","toLowerCase","handler","name","data","get","prop","includes","_isProxy","Proxy","set","value","deleteProperty","Setter","constructor","setters","defineProperties","this","structuredClone","fn","args","formFields","formAtts","formAttsNoVal","isFalsy","str","skipAttribute","events","val","replace","startsWith","addAttribute","att","delegate","setAttribute","removeAttribute","addDefaultAtts","nodeType","attributes","attName","childNodes","node","getNodeContent","length","textContent","isDifferentNode","node1","node2","tagName","id","src","diff","template","existing","templateNodes","existingNodes","scripts","querySelectorAll","script","remove","removeScripts","forEach","index","clone","cloneNode","append","ahead","Array","from","find","branch","aheadInTree","before","templateAtts","existingAtts","diffAttributes","nodeName","templateContent","fragment","createDocumentFragment","appendChild","innerHTML","extra","trimExtraNodes","render","html","doc","DOMParser","parseFromString","head","reverse","body","insertBefore","firstChild","createElement","stringToHTML","Component","options","instance","stores","map","store","debounce","start","addEventListener","stop","removeEventListener","self","window","cancelAnimationFrame","requestAnimationFrame","Listeners","listeners","ids","key","entries","crypto","randomUUID","getHandler","target","closest","getAttribute","fnName","split","listener","push"],"mappings":"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"}